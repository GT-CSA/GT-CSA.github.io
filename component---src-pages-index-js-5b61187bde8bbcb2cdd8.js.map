{"version":3,"file":"component---src-pages-index-js-5b61187bde8bbcb2cdd8.js","mappings":"yRAsCA,EA7BuB,SAAC,GAAe,IAAbA,EAAY,EAAZA,MACxB,OAAKA,GACAC,MAAMC,QAAQF,GAGjB,gBAAC,IAAD,KACE,sBAAIG,UCde,+CDehBH,EAAMI,KAAI,SAACC,GAAU,IAAD,EACnB,OACE,sBAAIC,IAAKD,EAAKE,MACZ,gBAAC,KAAD,CAAMC,GAAE,cAAgBH,EAAKE,KAAQJ,UCjBjC,uCDkBF,gBAAC,EAAAM,EAAD,CAAaC,IAAI,GAAGC,MAAON,EAAKO,UAAUC,kBAC1C,sBAAIV,UCjBD,wCDiB2BE,EAAKS,QAErC,4BACG,UAAAT,EAAKU,mBAAL,eAAkBC,OAAOC,EAAAA,EAAAA,GAAeZ,EAAKU,cAEhD,uBAAKZ,UCvBD,uCDwBF,yBAAOA,UAAU,QAAQE,EAAKa,aAC9B,gBAAC,IAAD,CAAMC,KAAMd,EAAKc,cAlBZ,O,0IECrB,EANmB,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAT,OACjB,gBAAC,KAAD,CAAMb,GAAIa,GACR,uBAAKlB,UCNW,qCDMgBiB,K,UEE9BE,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAgBH,OAhBGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAMvB,EAAQwB,GAAAA,CAAIC,KAAM,0CAClBC,EAAOF,GAAAA,CAAIC,KAAM,iCACvB,OACE,gBAAC,IAAD,CAAQE,SAAUF,KAAKG,MAAMD,UAC3B,gBAAC,IAAD,CACEhB,MAAOe,EAAKG,OAAO,GAAGhB,gBACtBC,MAAOY,EAAKZ,MACZgB,SAAUJ,EAAKI,UAEf,gBAAC,EAAD,CAAYT,KAAMK,EAAKK,SAAUX,KAAMM,EAAKM,YAE9C,gBAAC,IAAD,CAAgBhC,MAAOA,MAG5B,EAhBGsB,CAAkBW,EAAAA,WAmBxB","sources":["webpack://georgia-tech-chinese-student-association-webiste/./src/components/article-preview.js","webpack://georgia-tech-chinese-student-association-webiste/./src/components/article-preview.module.css","webpack://georgia-tech-chinese-student-association-webiste/./src/components/hero-button.js","webpack://georgia-tech-chinese-student-association-webiste/./src/components/hero-button.module.css","webpack://georgia-tech-chinese-student-association-webiste/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { renderRichText } from 'gatsby-source-contentful/rich-text'\n\nimport Container from './container'\nimport Tags from './tags'\nimport * as styles from './article-preview.module.css'\n\nconst ArticlePreview = ({ posts }) => {\n  if (!posts) return null\n  if (!Array.isArray(posts)) return null\n\n  return (\n    <Container>\n      <ul className={styles.articleList}>\n        {posts.map((post) => {\n          return (\n            <li key={post.slug}>\n              <Link to={`/cctv/blog/${post.slug}`} className={styles.link}>\n                <GatsbyImage alt=\"\" image={post.heroImage.gatsbyImageData} />\n                <h2 className={styles.title}>{post.title}</h2>\n              </Link>\n              <div>\n                {post.description?.raw && renderRichText(post.description)}\n              </div>\n              <div className={styles.meta}>\n                <small className=\"meta\">{post.publishDate}</small>\n                <Tags tags={post.tags} />\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </Container>\n  )\n}\n\nexport default ArticlePreview\n","// extracted by mini-css-extract-plugin\nexport var articleList = \"article-preview-module--article-list--pjL0a\";\nexport var link = \"article-preview-module--link--Hg6gs\";\nexport var meta = \"article-preview-module--meta--HPhQ8\";\nexport var title = \"article-preview-module--title--vFhz+\";","import React from 'react'\n\nimport { Link } from 'gatsby'\nimport * as styles from './hero-button.module.css'\n\nconst HeroButton = ({ text, link }) => (\n  <Link to={link}>\n    <div className={styles.button}>{text}</div>\n  </Link>\n)\n\nexport default HeroButton\n","// extracted by mini-css-extract-plugin\nexport var button = \"hero-button-module--button--N0qQD\";","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Layout from '../components/layout'\nimport Hero from '../components/hero'\nimport HeroButton from '../components/hero-button'\nimport ArticlePreview from '../components/article-preview'\n\nclass RootIndex extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.allContentfulBlogPost.nodes')\n    const hero = get(this, 'props.data.contentfulHomeHero')\n    return (\n      <Layout location={this.props.location}>\n        <Hero\n          image={hero.images[0].gatsbyImageData}\n          title={hero.title}\n          subtitle={hero.subtitle}\n        >\n          <HeroButton link={hero.linkSlug} text={hero.linkText} />\n        </Hero>\n        <ArticlePreview posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default RootIndex\n\nexport const pageQuery = graphql`\n  query HomeQuery {\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      nodes {\n        title\n        slug\n        publishDate(formatString: \"MMMM Do, YYYY\")\n        tags\n        heroImage {\n          gatsbyImageData(\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            width: 424\n            height: 212\n          )\n        }\n        description {\n          raw\n        }\n      }\n    }\n    contentfulHomeHero {\n      title\n      subtitle\n      linkText\n      linkSlug\n      images {\n        gatsbyImageData(layout: FULL_WIDTH, placeholder: BLURRED)\n      }\n    }\n  }\n`\n"],"names":["posts","Array","isArray","className","map","post","key","slug","to","G","alt","image","heroImage","gatsbyImageData","title","description","raw","renderRichText","publishDate","tags","text","link","RootIndex","render","get","this","hero","location","props","images","subtitle","linkSlug","linkText","React"],"sourceRoot":""}