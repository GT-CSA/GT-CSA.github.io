{"version":3,"file":"component---src-pages-cctv-js-ccad466aa51f54f6ea83.js","mappings":"0PAoBA,EAda,SAAC,GAAD,IAAGA,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAOC,EAAjB,EAAiBA,QAAjB,OACX,uBAAKC,UCJW,4BDKbH,GACC,gBAAC,EAAAI,EAAD,CAAaD,UCLA,4BDKyBE,IAAKJ,EAAOD,MAAOA,IAE3D,uBAAKG,UCTY,+BDUf,sBAAIA,UCPS,6BDOiBF,GAC7BC,GACC,uBAAKC,UCbQ,gCDaoBG,EAAAA,EAAAA,GAAeJ,Q,mEECxD,EAXa,SAAC,GAAD,IAAGK,EAAH,EAAGA,KAAH,OACXA,MAAAA,OAAA,EAAAA,EAAMC,QAAS,GACb,yBAAOL,UCJO,4BDKXI,EAAKE,KAAI,SAACC,GAAD,OACR,uBAAKC,IAAKD,EAAKP,UCPN,2BDQNO,S,wKESX,EAhBkB,SAAC,GAA8B,IAA5BE,EAA2B,EAA3BA,SAA2B,IAAjBC,GACvBC,OADwC,MAAZ,MAAY,EAG9C,OACE,gBAACA,EAAD,CACEC,MAAO,CACLC,SAAU,wBACVC,OAAQ,SACRC,QAAS,wCAGVN,I,UCyBP,EA7BuB,SAAC,GAAe,IAAbO,EAAY,EAAZA,MACxB,OAAKA,GACAC,MAAMC,QAAQF,GAGjB,gBAAC,EAAD,KACE,sBAAIhB,UCde,+CDehBgB,EAAMV,KAAI,SAACa,GAAU,IAAD,EACnB,OACE,sBAAIX,IAAKW,EAAKC,MACZ,gBAAC,KAAD,CAAMC,GAAE,cAAgBF,EAAKC,KAAQpB,UCjBjC,uCDkBF,gBAAC,EAAAC,EAAD,CAAaC,IAAI,GAAGL,MAAOsB,EAAKG,UAAUC,kBAC1C,sBAAIvB,UCjBD,wCDiB2BmB,EAAKrB,QAErC,4BACG,UAAAqB,EAAKK,mBAAL,eAAkBC,OAAOtB,EAAAA,EAAAA,GAAegB,EAAKK,cAEhD,uBAAKxB,UCvBD,uCDwBF,yBAAOA,UAAU,QAAQmB,EAAKO,aAC9B,gBAAC,IAAD,CAAMtB,KAAMe,EAAKf,cAlBZ,MEDfuB,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KAWH,OAXGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAMZ,EAAQa,GAAAA,CAAIC,KAAM,0CAExB,OACE,gBAAC,IAAD,CAAQC,SAAUD,KAAKE,MAAMD,UAC3B,gBAAC,IAAD,CAAKjC,MAAM,SACX,gBAAC,IAAD,CAAMA,MAAM,SACZ,gBAAC,EAAD,CAAgBkB,MAAOA,MAG5B,EAXGW,CAAkBM,EAAAA,WAcxB","sources":["webpack://georgia-tech-chinese-student-association-webiste/./src/components/hero.js","webpack://georgia-tech-chinese-student-association-webiste/./src/components/hero.module.css","webpack://georgia-tech-chinese-student-association-webiste/./src/components/tags.js","webpack://georgia-tech-chinese-student-association-webiste/./src/components/tags.module.css","webpack://georgia-tech-chinese-student-association-webiste/./src/components/container.js","webpack://georgia-tech-chinese-student-association-webiste/./src/components/article-preview.js","webpack://georgia-tech-chinese-student-association-webiste/./src/components/article-preview.module.css","webpack://georgia-tech-chinese-student-association-webiste/./src/pages/cctv.js"],"sourcesContent":["import React from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { renderRichText } from 'gatsby-source-contentful/rich-text'\n\nimport * as styles from './hero.module.css'\n\nconst Hero = ({ image, title, content }) => (\n  <div className={styles.hero}>\n    {image && (\n      <GatsbyImage className={styles.image} alt={title} image={image} />\n    )}\n    <div className={styles.details}>\n      <h1 className={styles.title}>{title}</h1>\n      {content && (\n        <div className={styles.content}>{renderRichText(content)}</div>\n      )}\n    </div>\n  </div>\n)\n\nexport default Hero\n","// extracted by mini-css-extract-plugin\nexport var content = \"hero-module--content--u1cO9\";\nexport var details = \"hero-module--details--WWO7r\";\nexport var hero = \"hero-module--hero--JreNK\";\nexport var image = \"hero-module--image--wE2lP\";\nexport var title = \"hero-module--title--+uEef\";","import React from 'react'\n\nimport * as styles from './tags.module.css'\n\nconst Tags = ({ tags }) =>\n  tags?.length > 0 && (\n    <small className={styles.tags}>\n      {tags.map((tag) => (\n        <div key={tag} className={styles.tag}>\n          {tag}\n        </div>\n      ))}\n    </small>\n  )\n\nexport default Tags\n","// extracted by mini-css-extract-plugin\nexport var tag = \"tags-module--tag--1TqEx\";\nexport var tags = \"tags-module--tags--qfz9t\";","import React from 'react'\n\nconst Container = ({ children, as = 'div' }) => {\n  const Tag = as\n\n  return (\n    <Tag\n      style={{\n        maxWidth: 'var(--size-max-width)',\n        margin: '0 auto',\n        padding: 'var(--space-2xl) var(--size-gutter)',\n      }}\n    >\n      {children}\n    </Tag>\n  )\n}\n\nexport default Container\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { renderRichText } from 'gatsby-source-contentful/rich-text'\n\nimport Container from './container'\nimport Tags from './tags'\nimport * as styles from './article-preview.module.css'\n\nconst ArticlePreview = ({ posts }) => {\n  if (!posts) return null\n  if (!Array.isArray(posts)) return null\n\n  return (\n    <Container>\n      <ul className={styles.articleList}>\n        {posts.map((post) => {\n          return (\n            <li key={post.slug}>\n              <Link to={`/cctv/blog/${post.slug}`} className={styles.link}>\n                <GatsbyImage alt=\"\" image={post.heroImage.gatsbyImageData} />\n                <h2 className={styles.title}>{post.title}</h2>\n              </Link>\n              <div>\n                {post.description?.raw && renderRichText(post.description)}\n              </div>\n              <div className={styles.meta}>\n                <small className=\"meta\">{post.publishDate}</small>\n                <Tags tags={post.tags} />\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </Container>\n  )\n}\n\nexport default ArticlePreview\n","// extracted by mini-css-extract-plugin\nexport var articleList = \"article-preview-module--article-list--pjL0a\";\nexport var link = \"article-preview-module--link--Hg6gs\";\nexport var meta = \"article-preview-module--meta--HPhQ8\";\nexport var title = \"article-preview-module--title--vFhz+\";","import React from 'react'\nimport { graphql } from 'gatsby'\nimport get from 'lodash/get'\n\nimport Seo from '../components/seo'\nimport Layout from '../components/layout'\nimport Hero from '../components/hero'\nimport ArticlePreview from '../components/article-preview'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const posts = get(this, 'props.data.allContentfulBlogPost.nodes')\n\n    return (\n      <Layout location={this.props.location}>\n        <Seo title=\"Blog\" />\n        <Hero title=\"Blog\" />\n        <ArticlePreview posts={posts} />\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query BlogIndexQuery {\n    allContentfulBlogPost(sort: { fields: [publishDate], order: DESC }) {\n      nodes {\n        title\n        slug\n        publishDate(formatString: \"MMMM Do, YYYY\")\n        tags\n        heroImage {\n          gatsbyImageData(\n            layout: FULL_WIDTH\n            placeholder: BLURRED\n            width: 424\n            height: 212\n          )\n        }\n        description {\n          raw\n        }\n      }\n    }\n  }\n`\n"],"names":["image","title","content","className","G","alt","renderRichText","tags","length","map","tag","key","children","as","Tag","style","maxWidth","margin","padding","posts","Array","isArray","post","slug","to","heroImage","gatsbyImageData","description","raw","publishDate","BlogIndex","render","get","this","location","props","React"],"sourceRoot":""}